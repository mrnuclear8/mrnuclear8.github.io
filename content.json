{"pages":[{"title":"","text":"个人简介 分享很喜欢的老罗的一段话： “每一个生命来到世间都注定改变世界，别无选择。要么变得好一点，要么变得坏一点。你如果走进社会为了生存为了什么不要脸的理由，变成了一个恶心的成年人社会中的一员，那你就把这个世界变得恶心了一点点。如果你一生刚正不阿，如果你一生耿直，没有做任何恶心的事情，没做对别人有害的事情，一辈子拼了老命勉强把自己身边的几个人照顾好了，没有成名没有发财，没有成就伟大的事业，然后耿着脖子一生正直，到了七八十岁耿着脖子去世了。你这一生是不是没有改变世界？你还是改变世界了，你把这个世界变得美好了一点点。因为世界上又多了一个好人。“ 善恶终有报,天道好轮回。不信抬头看,苍天饶过谁。无论何时何地，我们都要保持一颗积极乐观、善良感恩的心。但行好事莫问前程，永远年轻，永远热内盈眶，永远保持正能量。💪💪💪💪💪💪冲鸭！！！！ -&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;个人信息：信息安全专业 萌新一只 博客信息 网站采用的Icarus主题 追求尽可能的简洁，清晰，易用。 在Icarus主题之上进行了部分修改。 更新日志： 本站推荐索引 博客主题相关 技术知识点 法律法规 法律法规数据库 中华人民共和国国旗法 中华人民共和国宪法 中华人民共和国消费者权益保护法 中华人民共和国刑事诉讼法 中华人民共和国婚姻法 中华人名共和国网络安全法 中华人民共和国劳动法 其他 网易云音乐歌单分享 计划2020计划 2019.12.31 2020-GOALS 2019计划 2018.12.31/21:59:00-&gt;更新于2019.12.31 2019-GOALS 额外： 总结： 时间轴记录","link":"/about/index.html"},{"title":"","text":"唐艺昕 李沁 李一桐 gakki 图片搜集于互联网，侵权请留言，马上处理😊。","link":"/album/index.html"},{"title":"","text":"申请友链须知 原则上只和技术类博客交换，但不包括含有和色情、暴力、政治敏感的网站。 不和剽窃、侵权、无诚信的网站交换，优先和具有原创作品的网站交换。 申请请提供：站点名称、站点链接、站点描述、logo或头像（不要设置防盗链）。 排名不分先后，刷新后重排，更新信息后请留言告知。 会定期清理很久很久不更新的、不符合要求的友链，不再另行通知。 本站不存储友链图片，如果友链图片换了无法更新。图片裂了的会替换成默认图，需要更换的请留言告知。 本站友链信息如下，申请友链前请先添加本站信息： 网站图标：https://removeif.github.io/images/avatar.jpg 网站名称：辣椒の酱 网站地址：https://removeif.github.io 网站简介：后端开发，技术分享 加载中，稍等几秒...","link":"/friend/index.html"},{"title":"","text":"&nbsp;&nbsp;听听音乐 音乐播放器由mePlayer提供，布局参照网友博客所作，感谢作者的辛勤付出。更多音乐分享请查看歌单。 &nbsp;&nbsp;看看视频 ->点击以下条目开始播放视频,向下滑动查看更多","link":"/media/index.html"},{"title":"","text":"来而不往非礼也畅所欲言，有留必应","link":"/message/index.html"},{"title":"音乐歌单收藏","text":"温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/index.html"},{"title":"","text":"碎碎念 tips：github登录后按时间正序查看、可点赞加❤️、本插件地址..「+99次查看」 碎碎念加载中，请稍等... $.getScript(\"/js/gitalk_self.min.js\", function () { var gitalk = new Gitalk({ clientID: '46a9f3481b46ea0129d8', clientSecret: '79c7c9cb847e141757d7864453bcbf89f0655b24', id: '666666', repo: 'issue_database', owner: 'removeif', admin: \"removeif\", createIssueManually: true, distractionFreeMode: false }); gitalk.render('comment-container1'); });","link":"/self-talking/index.html"}],"posts":[{"title":"基于Fluxion6.4搭建的钓鱼WIFI","text":"学习永无止境，作为大学狗的我又迎来了假期，在这漫长的假期中总要找点事情做，最近在一个大佬的博客（那些年我们破解WIFI的一些事）中看到了破解WIFI的N种方式，我对其中的Fluxion搭建钓鱼WIFI颇感兴趣，下面就让我们来复现一下吧(注：hack千万条，安全第一条。渗透不规范，亲人两行泪） 1.实验环境系统：kali linux 2019.4无线网卡：RT3070（支持moniter模式）无线路由器:FAST 2.安装Fluxion终端输入git clone https://github.com/FluxionNetwork/fluxion.git若出现无法定位软件包，可以更换源，再重新下载。 3.启动Fluxion按照下面的命令打开Fluxion(如下图） PS:第一次启动软件会自动检查环境，提醒你还需要安装哪些软件，根据提示一键安装就行了。 选择语言（如上图） 我们选择1（如上图，总感觉这个翻译怪怪的···） 我们选择1吧（如上图） 扫描附近的WIFI,按Ctrl+C停止扫描（在FLUXION扫描仪里Ctrl+C，否则就退出Fluxion了），我选择目标16（如上图） 选择2跳过（如上图） 选择2（如上图） 选择攻击方式，我选择2，玩过aircrack-ng的都知道aireplay的作用是向用户发送大量deauth数据包，使其掉线。（如上图） 选择1（如上图）。 原本这里我的理解是输入一个保存握手包的路径就行了，但是一直报错路径错误或hash不存在，最后才发现填的是握手包的路径，意思就是还得自己抓握手包咯？这也太麻烦了，老版Fluxion是提供抓包的，并且这个步骤是可以空格跳过的，但是这个新的版本不行，也许是BUG吧，所以我还用aircrack-ng自己抓了握手包（这个细节就不提了，网上很多详细教程，如：Aircrack-ng破解无线WIFI密码） 选择3（如上图） 选择1（如上图） 选择1（如上图） Fluxion贴心的为用户提供了多种钓鱼页面，选择3试试吧（如上图）。 开始搭建钓鱼AP,等待鱼儿上钩（如上图，为了格式好看，图片分辨率低了些） 这时，使用FAST_084914无线网络的用户都会掉线，当他们查看网络时会发现另外一个一模一样的网络，出于好奇他们会尝试连接（理想情况下···）。 他们连接上钓鱼WIFI后，就会进入认证页面。 这时就体现握手包的用处了，当他们输入错误的密码时，通过和握手包里面的密码匹配，如果不一样是不会通过认证的，这样就增加了迷惑性，只有密码正确时才会出现以上的修复页面，得到密码后，Fluxion就会停止攻击，他们的网络又可以正常使用了（如上图）。 我们得到正确密码后，Fluxion自动关闭，并告诉你密码存放的位置。 查看密码（如上图） 一个又不紧张又不刺激的钓鱼过程就结束了，这种方式还是有局限性的，有警惕性的人很快就会识破这个trick,所以最简单的方式还是去直接问密码吧。","link":"/%E5%9F%BA%E4%BA%8EFluxion6-4%E6%90%AD%E5%BB%BA%E7%9A%84%E9%92%93%E9%B1%BCWIFI.html"},{"title":"西湖论剑——指鹿为马","text":"前几天被hxd拉去看看题，其中MISC的指鹿为马很有意思，我来说说这题我的解法。 首先nc服务器down下了三个信息，首先是python的源代码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165import numpy as npfrom PIL import Imageimport mathimport operatorimport osimport timeimport base64import randomdef load_horse(): data = [] p = Image.open('./horse.png').convert('L') p = np.array(p).reshape(-1) p = np.append(p,0) data.append(p) return np.array(data)def load_deer(): data = [] p = Image.open('./deer.png').convert('L') p = np.array(p).reshape(-1) p = np.append(p,1) data.append(p) return np.array(data)def load_test(pic): data = [] p = Image.open(pic).convert('L') p = np.array(p).reshape(-1) p = np.append(p,1) data.append(p) return np.array(data)def euclideanDistance(instance1, instance2, length): distance = 0 for x in range(length): distance += pow((instance1[x] - instance2[x]), 2) return math.sqrt(distance)def getNeighbors(trainingSet, testInstance, k): distances = [] length = len(testInstance) - 1 for x in range(len(trainingSet)): dist = euclideanDistance(testInstance, trainingSet[x], length) distances.append((trainingSet[x], dist)) distances.sort(key=operator.itemgetter(1)) neighbors = [] for x in range(k): neighbors.append(distances[x][0]) return neighborsdef getResponse(neighbors): classVotes = {} for x in range(len(neighbors)): response = neighbors[x][-1] if response in classVotes: classVotes[response] += 1 else: classVotes[response] = 1 sortedVotes = sorted(classVotes.items(), key=operator.itemgetter(1), reverse=True) return sortedVotes[0][0]def getAccuracy(testSet, predictions): correct = 0 for x in range(len(testSet)): if testSet[x][-1] == predictions[x]: correct += 1 return (correct / float(len(testSet))) * 100.0def check(pic): source_p = Image.open('deer.png') try: c_p = Image.open(pic) except: print(&quot;Please upload right picture.&quot;) exit() diff_pixel = 0 a, b = source_p.size if c_p.size[0] != a and c_p.size[1] != b: print(&quot;Please upload right picture size(&quot;+str(a)+','+str(b)+')') exit() for y in range(b): for x in range(a): diff_pixel += abs(source_p.getpixel((x, y)) - c_p.getpixel((x, y))) return diff_pixeldef main(): while 1: print('-' * 134) print(''' ____ __ _ _ _ _ _ _ _ | __ \\ / _| | | | | | | | | | | | | | | | |__) |___| |_ ___ _ __ | |_ ___ | |_| |__ ___ __| | ___ ___ _ __ __ _ ___ | |_| |__ ___ | |__ ___ _ __ ___ ___ | _ // _ \\ _/ _ \\ '__| | __/ _ \\ | __| '_ \\ / _ \\ / _` |/ _ \\/ _ \\ '__| / _` / __| | __| '_ \\ / _ \\ | '_ \\ / _ \\| '__/ __|/ _ \\\\ | | \\ \\ __/ || __/ | | || (_) | | |_| | | | __/ | (_| | __/ __/ | | (_| \\__ \\ | |_| | | | __/ | | | | (_) | | \\__ \\ __/ |_| \\_\\___|_| \\___|_| \\__\\___/ \\__|_| |_|\\___| \\__,_|\\___|\\___|_| \\__,_|___/ \\__|_| |_|\\___| |_| |_|\\___/|_| |___/\\___| ''') print('-'*134) print('\\t1.show source code') print('\\t2.give me the source pictures') print('\\t3.upload picture') print('\\t4.exit') choose = input('&gt;') if choose == '1': w = open('run.py','r') print(w.read()) continue elif choose == '2': print('this is horse`s picture:') h = base64.b64encode(open('horse.png','rb').read()) print(h.decode()) print('-'*134) print('this is deer`s picture:') d = base64.b64encode(open('deer.png', 'rb').read()) print(d.decode()) continue elif choose == '4': break elif choose == '3': print('Please input your deer picture`s base64(Preferably in png format)') pic = input('&gt;') try: pic = base64.b64decode(pic) except: exit() if b&quot;&lt;?php&quot; in pic or b'eval' in pic: print(&quot;Hacker!!This is not WEB,It`s Just a misc!!!&quot;) exit() salt = str(random.getrandbits(15)) pic_name = 'tmp_'+salt+'.png' tmp_pic = open(pic_name,'wb') tmp_pic.write(pic) tmp_pic.close() if check(pic_name)&gt;=100000: print('Don`t give me the horse source picture!!!') os.remove(pic_name) break ma = load_horse() lu = load_deer() k = 1 trainingSet = np.append(ma, lu).reshape(2, 5185) testSet = load_test(pic_name) neighbors = getNeighbors(trainingSet, testSet[0], k) result = getResponse(neighbors) if repr(result) == '0': os.system('clear') print('Yes,I want this horse like deer,here is your flag encoded by base64') flag = base64.b64encode(open('flag','rb').read()) print(flag.decode()) os.remove(pic_name) break else: print('I want horse but not deer!!!') os.remove(pic_name) break else: print('wrong choose!!!') break exit()if __name__=='__main__': main() 马的base64 1iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAAAAABwhuybAAAFeElEQVR4nO2Xy28TVxTGvzN2ZpLYIY5dkgImIU4I2DFqQqiaqGpL2gXqv8AC2lUX/BFl032lSpWqblqpGyQ2LQhERQhUDSqk4ZnEtHnxCATn4TjP8fOeLmZszzPEUpeclefeM7/z3e/OfRh4G/9n+Dtk907v7jnKh42vc6690u5BTe/u1FsFyEPVgGoaqkAbw+pR5+m5689dq+5QxApSWjuO/DhbGoRgU6dcv7E7UH1472EUw2fuFDVS8e+UKblmX3JXoHBfiEKAOJjSClPOOpTOp2k3kCG19aN3IADA08habGyZk7nxRN2bFTWc8AuEWiWADtG8AIAF1ZLNrZ77SwynqIAa19cpHpMZgLddmcsTCpmwBACFZLGcFQ69TKoaivPragVKxl/9Z/YI/WlxRiVtoKC1qyoAtJzyAgAx66+LrWdPNu2KGL2n/el6vaFZntogzUBS8wCALXUPA2CQXl0KBPbdXtFfN5gdPxt68M210lNTNFj6mSxooJdWX5ibB3w20JEv9vLMqyeFUlJDtEX7pb4kSZIInFi3rTZuOWIdWuTLfUJiVNxjpUuZFwA8xwVAUzNYvTvgs03ZoYRqAsW+CgnAh3rDWL3t8tMCULMfAD0H8CxzbH+NQQ4A9jeYQF3fHR1LE/fXdHkMNaWD8kyGwAAKaQBIpkJBWRsf1YeCEgOSvmtqrW3fnxTp+2kiYov21alNAkDL1zLWQdW2xQMMcX1eKwoA9edPFjnQG2AWVg+CsSAA8LSNg8w/N1cq7ksA8P7nAuBAT4CJyDwz3HC0BcCLaRsHwModtZztBYC4XwDgpt6RJY/gBo+JVNslL6/N+f12Tl59PRczgXQsN937SRY43StM+d5ION9nx5DILSeWyqvQCwDjmz4GQBt/LQIYOqqYX5FqXTaPgz3p5flSEgDcveohgDyXRwFgctK2NbNzCA50HJYNoO2vL2xJ0uYv51UAyA5btyH3YBz4WPtEdXt8J7p5fGxbe1DO9QmXFx0i98NdA8gcvecUp2bnkB59m4XLSTsxUcUpye0H4AbKVeES2Bd2BWGyGklSozuoKknat+hSuSpJtAMod8NdkvPtxq1w4pFbD684XtuMZ78n3Fx+u7hWdKxMuZnNQFuNvcMI6vqk8h1yIzuBqHB58XgKDiTDAChSKyrheMJT4cpvOULqWX4nRZKX4Walzslf/bVAABw0WW9sBX222OFKTdlLV3Sj7SQLSEoOaQtfdMet0yalLo6UzmE7yaZoQ99BVItJxE8uJgCQv0ySjSm7u/kTide3bq0DQEenftmZHTvVZCC5ghjQ55S5sD1//552UwsNKAwAtPBHMnk2UCG5gho8QPbWGoGLanpxKau1Kv26iumRNYzCQLKCvB5NudzvFdL4BctqoN4IA6Dio9EMYCJZpka0HNNaYt0C6rB1VUXeAwBSR25rJ/joz6ul784AKqYBeD/o8QCQB+sgjScsnOCAAkBKDz0snYujQ6U+o6KHrwio6WsuCbppEaQMBBmgV9dmy84o7WScFz3SQwuE4sMlQD5ZB2li0syhnggDmP7d8D8i1i2gzllBSA0tiNGxAhCNOzjU3gOQeHBjzaBxsA7SZAKwzlrqRsu/RUAerBM2QcEBhUkdfVw0tEVjAupw1g7CygrgLEjpDzHSf84Zl4U8WCekSa2g0wfpKKgzwsgMvzC1RbvLghz3bEeH/B5QbtVaECVBTiD507KDO0c0LpC5mXUFxQyCDWG7XmqCJvQnu0dGBw2RXWPaNO1R0bhAplzQDup2FpSYZYhtW8GSIDtIcRaErBUdMwmyexSLOQqyhdkhh//9n/kEOQiyRfwYpKyhoA00PgU8frMg5C8JWp94c97bqMR/qKdMxhtIpukAAAAASUVORK5CYII= 附转码后的图片（推荐个转码的网站：https://tool.jisuapi.com/base642pic.html） 鹿的base64 1iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAAAAABwhuybAAAEXUlEQVR4nO2XS2xbRRSG/5l7b/xSb2wnDqbBSdU0FcQUmsRZVCAkorZJumkrFWEkWLJgyZINC5bsQQKEVAkhNRKJRKWqjUiFEAgUkYRQtYQ+ZCc4jzbk4dgkaWzfOSwSP+7D9r3Jtmc198ycz/+ZmTMzBp6Zc2N959wAXGdjDEDTxY6DggJfXT8FoOv7L/wArox/xG2FmUcpHsUNwKO4FYB3QNABQaCKyGi39pc9kKzT8p/Yb3pdfkhNSvTtpvu/2eLoQBfPfjkNAGh7+bTqlYIfs8aGha9XHYOkUyd7pgFAes/L8iIHldIzo4/scSpB2mPRpWYAwLtwK1EAINZW8jY5utQmzr8Uv5YB+MKnf9uNtwTdGbt8uWtW8tG4c44OVPiWBqJRiELSOUcHQvbqw4FjDR4qHBbU/mane0MJy+e2Z7VDgFj3W01ZhZFGL4bGx2wvVzG63IzF/TMjZwYYh0Dh1k2HpHKtxeIqJZcfaqRpRPLgkGI3cM9KqcXiKjHCfoWSPIiamviQd3KuspyL4FhcJcALLyuRampiJ4Y+OFMxL0VFvXGVAOpTTkg2NQktcGm5YsNxAGCxd/wAQIH+SElu3XkSgV6jotbXsptySNKfafXnCWGpvN1kANB+JzraLxnH1SVJFZMkA0BWcvlebTAfqSQPSjef1tJkAG0pA17F6mgm+XxoLCUseqxB9AveCO5lxhViABVjifd13vlzYctUepVZASiVCGsMKQAg2j8JCrDtmaelgYzl0umcEcQiR4jf/ax8TuzvI0qn9xrJxCsaoC3Pl9MjOdRiToUI5A8vlL6NJbP73bYQgrfplpCE2Qig1vejVUH46Z4EUIvfzrVIR989WRW0el0AcEdscADRfEmtBsKNJQ6g1WvrphYdxTIxgx7c5gCpYVuSwHtc1UDaaIYBUti4UayNwoFqIExMcQCyTZBbrQrKjhYA8cRWYQCSUhWEHxKySM7ZU1SqDdmiK/XNlfUnebsgVAfRyPNHWJljyJFZ/4IVCKnp/nK0K6iP3NmwDxK3OyNFkgi+rp/H3amUVYz123dlZL3UwbjevLE2+yDcu5ood+lTI48lyTI1ALPLvd3HJQBM7EqGsuOntUVTQI1FDn8YIIAt/2xYNmrpyUvB4pf2+d2aigAUCADY6o/GA7vVxRtEs8Fp74+G3hjn+X/WioDQwUEAWG5+bW9W+IXYYUBguflFAgBqjEftgaosB9u6NskAgPzHgZqTvR9Q5VnKVh4tsT4C9t9m9RSxjV+tSSKhZYcny3LrKGLp4T+sO9YXgcwwSk+kOorYxJTZ6eMAJXcAbN7IFDXVS23H7JLaGNjW3p2+W8r7AMvf/BwBqU2D9wCgdheQSxrvT+cgXwRgj1eMbuegVpUgEqY94RgkHeNg60smv2NQcwuB5syL6RjU7gLbmjP7nYJ8EQCpjLmjVokwTtxY+y80guUTpBtTD7Q95iF23+icBnb+1Y95UEPMM6uw/wEb7IPCRqC/gwAAAABJRU5ErkJggg== 附转码后的图片 经过代码审阅，发现题目的要求是要你输入一张图片（这里称为test）的base64编码，通过他的条件就会得到flag。 我们发现在传入马和鹿和test时，load_horse()，load_deer()，load_test(),图片的尾部会被添加一个值，除了马是0，其他两张都是1，这是重点！！ 在看输入图片后的判断流程，第一个条件check()，check()的作用是将test和鹿的像素差的绝对值相加，如果大于10w就不通过。第二个条件getNeighbors(),比较test和马和鹿的像素的欧式距离。如果test和马的欧氏距离最近才能通过。getResponse()的作用就是判断图片的尾部是否为0（感觉这代码也是作者从其他地方扒拉过来的，图片对抗）。 所以我们就理清思路了，我们要输入一张test，test的总像素差和鹿不能超过10w，并且和马的欧式距离最近。真是“指鹿为马”啊。 一开始我是想用PS将两个图片叠加再一起的，可是一直过不了，还尝试了几次不同比例叠加，也不行，听说有大佬用PS过了。我还是交给脚本吧···，我的思路是在鹿的基础上将马的像素点一个一个加上去，直到满足两个条件就停止。 123456789101112131415161718192021222324from PIL import Imagema = Image.open('./horse.png').convert('L')print(ma)print(ma.size)print(ma.getpixel((0, 70)))lu = Image.open('./deer.png').convert('L')luandma = Image.open('./deer.png').convert('L')for i in range(72): for j in range(72): px = ma.getpixel((i, j)) luandma.putpixel((i,j),px) diff_pixel = 0 distance1 = 0 distance2 = 0 for y in range(72): for x in range(72): distance1 += pow(abs(lu.getpixel((x, y)) - luandma.getpixel((x, y))), 2) distance2 += pow(abs(ma.getpixel((x, y)) - luandma.getpixel((x, y))), 2) diff_pixel += abs(lu.getpixel((x, y)) - luandma.getpixel((x, y))) if diff_pixel &lt;= 100000 and distance1 &gt; distance2: print(&quot;ok&quot;) luandma.save('done.png') exit() 然后就得到了一张test的图片（这是我跑完的最后一张），半马半鹿，妙啊。 提交成功得到flag 然后base64转码成txt后发现里面还有图片的base64，再转，才是最后的flag 解题就完成了，如果我讲的有哪里不对，请各位师傅多多包涵，也请评论点出，谢谢！","link":"/%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91%E2%80%94%E2%80%94%E6%8C%87%E9%B9%BF%E4%B8%BA%E9%A9%AC.html"}],"tags":[{"name":"工具教程","slug":"工具教程","link":"/tags/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/"}],"categories":[{"name":"工具教程","slug":"工具教程","link":"/categories/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/"},{"name":"主题工具","slug":"工具教程/主题工具","link":"/categories/%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/%E4%B8%BB%E9%A2%98%E5%B7%A5%E5%85%B7/"}]}